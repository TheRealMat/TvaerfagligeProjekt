@*@page "/credentials"
@inject HttpClient Http
@inject ProtectedBrowserStorage protectedBrowserStorage
<PageTitle>Credentials</PageTitle>

<div id="login">
        <h3 class="text-center pt-5">Login form</h3>
        <div class="container">
            <div id="login-row" class="row justify-content-center align-items-center">
                <div id="login-column" class="col-md-6">
                    <div id="login-box" class="col-md-12">
                        <form id="login-form" class="form" action="" method="post">
                            <h3 class="text-center text-info">Credentials</h3>
                            <div class="form-group">
                                <label class="text-info">Username:</label><br>
                                <input type="text" value="@UserNameRef" class="form-control" onchange=SaveUserName>
                            </div>
                            <div class="form-group">
                                <label class="text-info">Password:</label><br>
                                <input type="text" value="@UserPasswordRef" class="form-control" onchange=SaveUserPassword>
                            </div>
                                <div class="form-group">
                                <label class="text-info">API IP:</label><br>
                                <input type="text" value="@IpRef" class="form-control" onchange=SaveApiIp>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
</div>
@code {
    ProtectedBrowserStorageResult<string> UserNameRef;
    ProtectedBrowserStorageResult<string> UserPasswordRef;
    ProtectedBrowserStorageResult<string> IpRef;

    protected override async Task OnInitializedAsync()
    {
        UserNameRef = await protectedBrowserStorage.GetAsync<string>("username");
        UserPasswordRef = await protectedBrowserStorage.GetAsync<string>("password");
        IpRef = await protectedBrowserStorage.GetAsync<string>("apiip");
    }
    private async void SaveUserName()
    {
        await protectedBrowserStorage.SetAsync("username", UserNameRef);
    }
    private async void SaveUserPassword()
    {
        await protectedBrowserStorage.SetAsync("password", UserPasswordRef);
    }
    private async void SaveApiIp()
    {
        await protectedBrowserStorage.SetAsync("apiip", IpRef);
    }
}*@